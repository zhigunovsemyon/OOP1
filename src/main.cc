/*Разработать структуру элементов данных класса в виде дин.структуры данных.
Разработать:
    *конструкторы для различных типов входных данных (без параметров, параметр-
    строка, параметр-массив), конструктор копирования (объект из объекта) и
    деструктор;

    *методы ввода и вывода содержимого объекта в поток (на экран), в текстовую
    строку (из строки);

    *получения ссылки на внутренние данные объекта (например на коэффициент
    матрицы), либо чтение/запись отдельных компонент объекта.

В конструкторе и деструкторе предусмотреть трассировку -- вывод адреса текущего
объекта и его содержимого. Проследить последовательность вызова конструкторов и
деструкторов при определении глобальных, локальных, динамических объектов, а
также их массивов, при передаче объекта в виде форм. пар-ра по умолчанию и
возврате его по зн. в качестве результата.*/

/*Матрица переменной размерности, представленная динамическим массивом
указателей на строки матрицы (линейные динамические массивы)*/

#include <iostream>

std::ostream &trace = std::cout;

struct Matrix {
	int **ptr;

	Matrix() {
		this->ptr = nullptr;
		trace << "Адрес созданного объекта: " << this << '\n';
		trace << "Адрес созданной памяти: " << this->ptr << '\n';
	}
};

int main(void){
	Matrix m1;
    std::cout << "Hello World!\n";
    return EXIT_SUCCESS;
}
